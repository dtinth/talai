// Generated by LiveScript 1.2.0
(function(){
  var ref$, last, map, values, Obj;
  ref$ = require('prelude-ls'), last = ref$.last, map = ref$.map, values = ref$.values, Obj = ref$.Obj;
  google.maps.event.addDomListener(window, 'load', function(){
    var options, googleMap, loadJson, promiseStops, promiseBuses;
    options = {
      zoom: 15,
      center: new google.maps.LatLng(13.85009, 100.56895),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    googleMap = new google.maps.Map($('#map-canvas')[0], options);
    loadJson = function(it){
      return $.getJSON("http://jsonp.jit.su/?url=" + encodeURIComponent(it));
    };
    promiseStops = loadJson("http://kubus.netburzt.com/appapi/mobileService/getRouteAndStop.php");
    promiseBuses = loadJson("http://kubus.netburzt.com/map/getbusposition");
    return promiseStops.then(function(info){
      var stringToCoord, arrayToCoord, polylineCoords, lineColors, markerColors, i$, own$ = {}.hasOwnProperty;
      stringToCoord = function(x){
        return (function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor, result = func.apply(child, args), t;
          return (t = typeof result)  == "object" || t == "function" ? result || child : child;
  })(google.maps.LatLng, x.split(',').map(parseFloat), function(){});
      };
      arrayToCoord = map(stringToCoord);
      polylineCoords = Obj.map(arrayToCoord, info.Polyline);
      lineColors = {
        '0': '#777777',
        '1': '#ff0000',
        '2': '#0000ff',
        '3': '#119911',
        '4': '#cccc00',
        '5': '#777777'
      };
      markerColors = {
        '0': 'purple',
        '1': 'red',
        '2': 'blue',
        '3': 'green',
        '4': 'yellow',
        '5': 'purple'
      };
      for (i$ in polylineCoords) if (own$.call(polylineCoords, i$)) {
        (fn$.call(this, i$, polylineCoords[i$]));
      }
      return promiseBuses.then(function(buses){
        var i$, len$, results$ = [];
        for (i$ = 0, len$ = buses.length; i$ < len$; ++i$) {
          results$.push((fn$.call(this, buses[i$])));
        }
        return results$;
        function fn$(bus){
          var coord, infoWindow, marker;
          console.log(bus);
          coord = new google.maps.LatLng(+bus.latitude, +bus.longitude);
          infoWindow = new google.maps.InfoWindow({
            content: '<pre>' + JSON.stringify(bus, null, 2) + '</pre>'
          });
          marker = new google.maps.Marker({
            position: coord,
            map: googleMap,
            icon: "http://maps.google.com/mapfiles/ms/icons/" + markerColors[bus.buslineid] + "-dot.png",
            title: bus.busname
          });
          return google.maps.event.addListener(marker, 'click', function(){
            return infoWindow.open(googleMap, marker);
          });
        }
      });
      function fn$(line, coords){
        var polyline;
        polyline = new google.maps.Polyline({
          path: coords,
          geodesic: true,
          strokeColor: lineColors[line],
          strokeWeight: 2,
          strokeOpacity: 1
        });
        polyline.setMap(googleMap);
      }
    });
  });
}).call(this);
